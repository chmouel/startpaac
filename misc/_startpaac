#compdef startpaac

# Declare local variables
local curcontext="$curcontext" state line ret=1
local -A opt_args

# Define common subcommands and their descriptions
local -a pac_components
pac_components=(
    'controller:Deploy PAC controller component'
    'watcher:Deploy PAC watcher component'
    'webhook:Deploy PAC webhook component'
)

_get_pass_profiles() {
    local -a profiles
    local passvars

    local pass_dir=${PASSWORD_STORE_DIR:-~/.password-store}/pac/vars

    if [[ -d $pass_dir ]]; then
        profiles=($pass_dir/*(.N:t:r))
        _values 'profiles' $profiles
    fi

    return 0
}

# Main argument specification
_arguments -C \
    '(-h --help)'{-h,--help}'[Display help information]' \
    '(-a --all)'{-a,--all}'[Install everything]' \
    '(-A --all-but-kind)'{-A,--all-but-kind}'[Install everything but kind]' \
    '(-k --kind)'{-k,--kind}'[Install Kind]' \
    '(-g --install-forge)'{-g,--install-forge}'[Install Forgejo]' \
    '(-c --component)'{-c,--component}'[Deploy a specific PAC component]:component:->components' \
    '(-p --install-paac)'{-p,--install-paac}'[Deploy and configure PAC]' \
    '(-s --sync-kubeconfig)'{-s,--sync-kubeconfig}'[Sync kubeconfig from remote host]' \
    '(-G --start-user-gosmee)'{-G,--start-user-gosmee}'[Start gosmee locally for user]' \
    '(-S --github-second-ctrl)'{-S,--github-second-ctrl}'[Deploy second controller for github]' \
    '(-H --all-github-second-no-forgejo)'{-H,--all-github-second-no-forgejo}'[Install everything but forgejo]' \
    '(-O --scale-down)'{-O,--scale-down}'[Scale down the controller]:controller:' \
    '--stop-kind[Stop Kind cluster]' \
    '--install-nginx[Install nginx ingress controller]' \
    '--install-postgresql[Install a postgresql database]' \
    '--all-to-tekton[Install everything up to Tekton]' \
    '--install-dashboard[Install Tekton dashboard]' \
    '--install-registry[Install Docker registry]' \
    '--install-tekton[Install Tekton]' \
    '--debug-image[Use a debug image]' \
    '--second-secret[Set the secret for second controller]:secret:->pass_profiles' \
    '--configure-pac[Configure PAC]' \
    '--show-config[Show config]' \
    '--install-custom-crds[Install custom CRDs]' \
    '--all-but-forge[Install everything except Forgejo]' \
    '*:argument:->args' && ret=0

case $state in
    components)
        _describe -t components 'pac components' pac_components && ret=0
        ;;
    pass_profiles)
        _get_pass_profiles && ret=0
        ;;
    args)
        case $line[1] in
            *)
                _files && ret=0
                ;;
        esac
        ;;
esac

return ret
